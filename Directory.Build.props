<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project>
  <PropertyGroup>
    <IsUnitTestProject Condition="'$(IsUnitTestProject)' == ''">false</IsUnitTestProject>
    <IsIntegrationTestProject Condition="'$(IsIntegrationTestProject)' == ''">false</IsIntegrationTestProject>
    <IsTestProject Condition="'$(IsTestProject)' == ''">false</IsTestProject>
    <OutDirName Condition="'$(OutDirName)' == ''">Dlls</OutDirName>
  </PropertyGroup>

  <Import Project="build\import\NuGet.props"/>
  <Import Project="build\import\Versions.props"/>

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>

    <!--
      RepoToolset props and targets are conditionally imported based on whether RepoToolsetDir is set or not
      to allow VS to load packages and perform automatic package restore. 
      TODO: Remove once we can use a custom SDK (https://github.com/Microsoft/msbuild/issues/1493)
    -->
    <_RepoToolsetDir>$(NuGetPackageRoot)roslyntools.repotoolset\$(RoslynToolsRepoToolsetVersion)\tools\</_RepoToolsetDir>
    <RepoToolsetDir Condition="'$(BuildingInsideVisualStudio)' != 'true' or Exists('$(_RepoToolsetDir)')">$(_RepoToolsetDir)</RepoToolsetDir>

    <RepositoryUrl>https://github.com/dotnet/project-system</RepositoryUrl>
    <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl>

    <!-- All projects in this repository target the same framework by default -->
    <TargetFramework>net472</TargetFramework>

    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>

    <VSSDKTargetPlatformRegRootSuffix Condition="'$(RootSuffix)' != ''">$(RootSuffix)</VSSDKTargetPlatformRegRootSuffix>
    <VSSDKTargetPlatformRegRootSuffix Condition="'$(VSSDKTargetPlatformRegRootSuffix)' == ''">Exp</VSSDKTargetPlatformRegRootSuffix>

    <MoqPublicKey>0024000004800000940000000602000000240000525341310004000001000100c547cac37abd99c8db225ef2f6c8a3602f3b3606cc9891605d02baa56104f4cfc0734aa39b93bf7852f7d9266654753cc297e7d2edfe0bac1cdcf9f717241550e0a7b191195b7667bb4f64bcb8e2121380fd1d9d46ad2d92d2d15605093924cceaf74c4861eff62abf69b9291ed0a340e113be11e6a7d3113e92484cf7045cc7</MoqPublicKey>

    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <ForceGenerationOfBindingRedirects>true</ForceGenerationOfBindingRedirects>

    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
  </PropertyGroup>

  <!-- Modify the set of implicit usings -->
  <ItemGroup>
    <!-- We use immutable collections extensively and expect no naming conflicts -->
    <Using Include="System.Collections.Immutable" />
    <!-- There are two namespaces via which MEF attributes are defined. This is the correct one. -->
    <Using Include="System.ComponentModel.Composition" />
  </ItemGroup>

  <!--
    TODO: Import layout props so that design-time build executed before package restore is finished doesn't
    product artifacts into wrong obj directories. Remove once we can use a custom SDK (https://github.com/Microsoft/msbuild/issues/1493)
  -->
  <Import Project="build\import\ProjectLayout.props"/>

  <Import Project="$(RepoToolsetDir)Settings.props" Condition="'$(ExcludeRestorePackageImports)' != 'true' AND Exists('$(RepoToolsetDir)Settings.props')" />
  <Import Project="build\import\OverrideRepoToolsetVersions.props"/>

  <Import Project="build\import\Workarounds.props"/>

  <PropertyGroup>
    <_IsVisualStudioDeveloperBuild Condition="'$(OfficialBuild)' != 'true' AND '$(CIBuild)' != 'true' AND '$(BuildingInsideVisualStudio)' == 'true'">true</_IsVisualStudioDeveloperBuild>

    <!-- Code Coverage doesn't currently work for portable/embedded PDBs - force to full inside Visual Studio builds -->
    <DebugType Condition="'$(_IsVisualStudioDeveloperBuild)' == 'true'">full</DebugType>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Language)' == 'C#'">
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <LangVersion>preview</LangVersion>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <Features>strict</Features>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Language)' == 'VB'">
    <LangVersion>16</LangVersion>
    <VBRuntime>Default</VBRuntime>  <!-- The default is Embed -->
    <RemoveIntegerChecks>true</RemoveIntegerChecks>
    <Features>strict</Features>
  </PropertyGroup>

  <PropertyGroup>
    <UseCommonOutputDirectory Condition="'$(UseCommonOutputDirectory)' == ''">true</UseCommonOutputDirectory>
    <NoWarn>$(NoWarn);NU5125</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <!--
      TODO: Suppress warnings about duplicate PackageReferences until we can remove them (https://github.com/dotnet/project-system/issues/8074)
    -->
    <NoWarn>$(NoWarn);NU1504</NoWarn>
  </PropertyGroup>
</Project>

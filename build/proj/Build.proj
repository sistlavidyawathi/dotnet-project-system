<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project DefaultTargets="ClearNuGetCache;PrepareMachine;CoreBuild;UploadCodeCoverage">

  <Import Project="..\import\Versions.props"/>
  <Import Project="..\import\NuGet.props"/>
  <Import Project="..\import\RepoLayout.props" />

  <PropertyGroup>
    <ToolsetBuildProjectFilePath>$(NuGetPackageRoot)RoslynTools.RepoToolset\$(RoslynToolsRepoToolsetVersion)\tools\Build.proj</ToolsetBuildProjectFilePath>
    <IsCodeCoverageBuild Condition="'$(UsingCodeCoverage)' == 'true' AND '$(Configuration)' == 'Debug'">true</IsCodeCoverageBuild>
  </PropertyGroup>

  <Target Name="ClearNuGetCache" Condition="'$(ClearNuGetCache)' == 'true'">
    <Message Text="Clearing '$(NuGetPackageRoot)'..." Importance="high" />

    <!-- Clean nuget packages to unnecessary to avoid mismatching versions of SWIX Microbuild and VSSDK
         and to avoid picking up packages on the machine, but not in any of our sources -->
    <RemoveDir Directories="$(NuGetPackageRoot)" />
  </Target>

  <Target Name="PrepareMachine" Condition="'$(CIBuild)' == 'true'">
    <!-- Always create these directories so that publish always succeeds despite where the failure is -->
    <MakeDir Directories="$(ArtifactsBinDir);$(ArtifactsLogDir);$(ArtifactsTestResultsDir);$(VisualStudioSetupOutputPath)" />
  </Target>

  <!-- Delegate onto CoreBuild.proj, which will will actually restore, build, test, and pack our solution -->
  <Target Name="CoreBuild">
    <PropertyGroup>
      <CoreBuildProperties>
        UseOpenCover=$(IsCodeCoverageBuild);
        Configuration=$(Configuration);
        CIBuild=$(CIBuild);
        Build=$(Build);
        Rebuild=$(Rebuild);
        Deploy=$(Deploy);
        Test=$(Test);
        IntegrationTest=$(IntegrationTest);
        QuickSrcBuild=$(QuickSrcBuild);
      </CoreBuildProperties>
    </PropertyGroup>

    <MSBuild BuildInParallel="true" Projects="CoreBuild.proj" Properties="$(CoreBuildProperties)" />
  </Target>

  <!-- Push code coverage to https://codecov.io/ -->
  <Target Name="UploadCodeCoverage" Condition="'$(IsCodeCoverageBuild)' == 'true'">
    <MSBuild BuildInParallel="true" Projects="CodeCov.proj" />
  </Target>

</Project>

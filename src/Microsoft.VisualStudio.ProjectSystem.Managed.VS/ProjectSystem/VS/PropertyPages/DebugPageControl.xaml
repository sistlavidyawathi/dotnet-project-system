<local:PropertyPageControl x:Class="Microsoft.VisualStudio.ProjectSystem.VS.PropertyPages.DebugPageControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Microsoft.VisualStudio.ProjectSystem.VS.PropertyPages"
             xmlns:util="clr-namespace:Microsoft.VisualStudio.ProjectSystem.VS.Utilities"
             xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d" 
             x:ClassModifier="internal"
             d:DesignHeight="700"
             d:DesignWidth="1000" 
             d:DataContext="{d:DesignInstance local:DebugPageViewModel}"
             UseLayoutRounding="true"
             TextOptions.TextFormattingMode="Display"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="WatermarkStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter
                x:Key="visibilityConverter" />
            <util:MultiValueBoolToBool_And 
                x:Key="MultiValueBoolToBoolAnd"/>
            <util:InverseBooleanConverter 
                x:Key="InverseBooleanConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid
            x:Name="_mainGrid"
            Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- Launch profile -->
            <Label
                Grid.Row="0"
                x:Uid="profileLabel" 
                Margin="4,4,3,5"
                Content="{x:Static Member=local:PropertyPageResources.Profile}"
                IsTabStop="False" 
                VerticalAlignment="Center"
                Target="{Binding ElementName=profileCombo}"/>
            <ComboBox
                Grid.Row="0" 
                Grid.Column="1"
                x:Name="profileCombo"
                MinWidth="200" 
                VerticalAlignment="Center"
                DisplayMemberPath="Name"
                VerticalContentAlignment="Center"
                MinHeight="23"
                Margin="5,6,2,7"
                TabIndex="0"
                ItemsSource="{Binding Path=LaunchProfiles, Mode=OneWay}"
                SelectedValue="{Binding Path=SelectedDebugProfile}"
                AutomationProperties.Name="{x:Static Member=local:PropertyPageResources.Profile}">
                <ComboBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                        <Binding Path="HasProfilesOrNotInitialized" Mode="OneWay"/>
                        <Binding Path="EnvironmentVariablesValid" Mode="OneWay"/>
                        <Binding Path="DoesNotHaveErrors" Mode="OneWay"/>
                    </MultiBinding>
                </ComboBox.IsEnabled>
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="AutomationProperties.Name" Value="{Binding Path=Name}"/>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
            <StackPanel
                Grid.Row="0"
                Grid.Column="2"
                Orientation="Horizontal">
                <Button
                    x:Uid="btnNewProfile" 
                    x:Name="btnNewProfile"
                    MinHeight="23"
                    MinWidth="80"
                    Margin="6,8,1,8"
                    VerticalContentAlignment="Center"
                    VerticalAlignment="Center"
                    AutomationProperties.HelpText="{x:Static Member=local:PropertyPageResources.NewBtnHelpText}"
                    Content="{x:Static Member=local:PropertyPageResources.NewBtn}"
                    IsEnabled="{Binding Path=NewProfileEnabled, Mode=OneWay}"
                    Command="{Binding Path=NewProfileCommand}">
                </Button>
                <Button
                    x:Uid="btnDeleteProfile"
                    x:Name="btnDeleteProfile"
                    MinHeight="23"
                    MinWidth="80"
                    Margin="6,8,1,8"
                    VerticalContentAlignment="Center"
                    VerticalAlignment="Center"
                    AutomationProperties.HelpText="{x:Static Member=local:PropertyPageResources.DeleteBtnHelpText}"
                    Content="{x:Static Member=local:PropertyPageResources.DeleteBtn}"
                    IsEnabled="{Binding Path=DeleteProfileEnabled, Mode=OneWay}"
                    Command="{Binding Path=DeleteProfileCommand}">
                </Button>
            </StackPanel>
            
            <!-- Launch type -->
            <Label
                x:Uid="launchLabel"
                Grid.Row="1" 
                Margin="4,5,3,4"
                Content="{x:Static Member=local:PropertyPageResources.Launch}"
                MinWidth="150" 
                IsTabStop="False"
                Target="{Binding ElementName=launchCombo}"/>
            <ComboBox
                Grid.Row="1"
                Grid.Column="1"
                x:Name="launchCombo"
                MinWidth="200"
                MinHeight="23"
                Margin="5,7,2,6"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                ItemsSource="{Binding Path=LaunchTypes, Mode=OneWay}"
                SelectedValue="{Binding Path=SelectedLaunchType, Mode=TwoWay}"
                DisplayMemberPath="Name"
                IsReadOnly="True"
                IsEditable="False"
                AutomationProperties.Name="{x:Static Member=local:PropertyPageResources.Launch}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="AutomationProperties.Name" Value="{Binding Path=Name}"/>
                    </Style>
                </ComboBox.ItemContainerStyle>
                <ComboBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                        <Binding Path="HasProfilesOrNotInitialized" Mode="OneWay"/>
                        <Binding Path="EnvironmentVariablesValid" Mode="OneWay"/>
                        <Binding Path="DoesNotHaveErrors" Mode="OneWay"/>
                    </MultiBinding>
                </ComboBox.IsEnabled>
            </ComboBox>
            
            <!-- Executable path -->
            <Label 
                Grid.Row="2"
                x:Uid="executableLabel"
                Margin="4,4,3,5"
                Content="{x:Static Member=local:PropertyPageResources.Executable}"
                IsTabStop="False" 
                VerticalAlignment="Center"
                Visibility="{Binding Path=SupportsExecutable, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                Target="{Binding ElementName=executableText}"/>
            <local:WatermarkTextBox
                Grid.Row="2"
                Grid.Column="1"
                x:Name="executableText"
                Watermark="{x:Static Member=local:PropertyPageResources.ExecutablePathWatermark}"
                MinWidth="200"
                MinHeight="23"
                Margin="5,8,2,7"
                VerticalContentAlignment="Center"
                VerticalAlignment="Center"
                Text="{Binding Path=ExecutablePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding Path=SupportsExecutable, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                AutomationProperties.Name="{x:Static Member=local:PropertyPageResources.Executable}"
                AutomationProperties.HelpText="{x:Static Member=local:PropertyPageResources.ExecutablePathWatermark}"/>
            <Button
                Grid.Row="2"
                Grid.Column="2"
                x:Uid="btnExecutable"
                x:Name="btnExecutable"
                MinHeight="23"
                MinWidth="80"
                Margin="6,8,0,7"
                HorizontalAlignment="Left"
                VerticalContentAlignment="Center"
                VerticalAlignment="Center"
                Content="{x:Static Member=local:PropertyPageResources.BrowseBtn}"
                IsEnabled="{Binding Path=IsProfileSelected, Mode=OneWay}"
                Visibility="{Binding Path=SupportsExecutable, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                Command="{Binding Path=BrowseExecutableCommand}"/>
            
            <!-- Arguments -->
            <Label 
                Grid.Row="3"
                x:Uid="argumentsLabel"
                Margin="4,4,3,0"
                Content="{x:Static Member=local:PropertyPageResources.ApplicationArguments}"
                IsTabStop="False"
                VerticalAlignment="Top"
                Visibility="{Binding Path=SupportsArguments, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                Target="{Binding ElementName=txtArguments}"/>
            <local:WatermarkTextBox 
                Grid.Row="3"
                Grid.Column="1"
                x:Name="txtArguments"
                Watermark="{x:Static Member=local:PropertyPageResources.ApplicationArgumentsWatermark}"
                WatermarkVerticalAlignment="Top"
                MinWidth="200"
                MinHeight="75"
                Margin="5,4,2,4"
                TextWrapping="Wrap"        
                VerticalAlignment="Center"
                Text="{Binding Path=CommandLineArguments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{Binding Path=IsProfileSelected, Mode=OneWay}"
                Visibility="{Binding Path=SupportsArguments, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                AutomationProperties.Name="{x:Static Member=local:PropertyPageResources.ApplicationArguments}"
                AutomationProperties.HelpText="{x:Static Member=local:PropertyPageResources.ApplicationArgumentsWatermark}"/>
            
            <!-- Working directory -->
            <Label 
                Grid.Row="4"
                x:Uid="workingDirectoryLabel"
                Margin="4,4,3,5"
                Content="{x:Static Member=local:PropertyPageResources.WorkingDirectory}"
                VerticalAlignment="Center"
                Visibility="{Binding Path=SupportsWorkingDirectory, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                Target="{Binding ElementName=txtWorkingDirectory}"/>
            <local:WatermarkTextBox  
                Grid.Row="4"
                Grid.Column="1"
                x:Name="txtWorkingDirectory" 
                Watermark="{x:Static Member=local:PropertyPageResources.WorkingDirectoryWatermark}"
                Text="{Binding Path=WorkingDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                MinHeight="23"
                Margin="5,8,2,7"
                IsEnabled="{Binding Path=IsProfileSelected, Mode=OneWay}"
                Visibility="{Binding Path=SupportsWorkingDirectory, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                MinWidth="200"
                AutomationProperties.Name="{x:Static Member=local:PropertyPageResources.WorkingDirectory}"
                AutomationProperties.HelpText="{x:Static Member=local:PropertyPageResources.WorkingDirectoryWatermark}"/>
            <Button
                Grid.Row="4"
                Grid.Column="2"
                x:Uid="btnWorkingDirectory"
                x:Name="btnWorkingDirectory"
                MinHeight="23"
                MinWidth="80"
                Margin="6,8,0,7"
                HorizontalAlignment="Left"
                VerticalContentAlignment="Center"
                VerticalAlignment="Center"
                Content="{x:Static Member=local:PropertyPageResources.BrowseBtn}"
                IsEnabled="{Binding Path=IsProfileSelected, Mode=OneWay}"
                Visibility="{Binding Path=SupportsWorkingDirectory, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                Command="{Binding Path=BrowseDirectoryCommand}"/>

            <!-- Launch URL -->
            <CheckBox 
                Grid.Row="5"
                Grid.Column="0"
                x:Uid="chkLaunchBrowser"
                x:Name="chkLaunchBrowser"
                IsChecked="{Binding HasLaunchOption, Mode=TwoWay}"
                Margin="9,7,3,7"
                VerticalAlignment="Center"
                IsEnabled="{Binding Path=IsProfileSelected, Mode=OneWay}"
                Visibility="{Binding Path=SupportsLaunchUrl, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                VerticalContentAlignment="Center"
                AutomationProperties.HelpText="{x:Static Member=local:PropertyPageResources.chkLaunchBrowserHelpText}"
                Content="{x:Static Member=local:PropertyPageResources.LaunchURL}"/>
            <local:WatermarkTextBox 
                Grid.Row="5"
                Grid.Column="1"
                x:Name="txtLaunchPage"
                Watermark="{x:Static Member=local:PropertyPageResources.LaunchUrlWatermark}"
                Margin="5,5,2,4"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                Text="{Binding Path=LaunchPage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding Path=SupportsLaunchUrl, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                MinWidth="200"
                MinHeight="23"
                AutomationProperties.Name="{x:Static Member=local:PropertyPageResources.LaunchURL}">
                <local:WatermarkTextBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                        <Binding Path="HasLaunchOption" Mode="OneWay"/>
                        <Binding Path="IsProfileSelected" Mode="OneWay"/>
                    </MultiBinding>
                </local:WatermarkTextBox.IsEnabled>
            </local:WatermarkTextBox>

            <!-- Remote debugging -->
            <CheckBox
                Grid.Row="6"
                Grid.Column="0"
                x:Uid="chkRemoteDebugEnabled"
                x:Name="chkRemoteDebugEnabled"
                IsChecked="{Binding RemoteDebugEnabled, Mode=TwoWay}"
                Margin="9,7,3,7"
                VerticalAlignment="Center"
                IsEnabled="{Binding Path=IsProfileSelected, Mode=OneWay}"
                Visibility="{Binding Path=SupportsRemoteDebug, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                VerticalContentAlignment="Center"
                AutomationProperties.HelpText="{x:Static Member=local:PropertyPageResources.chkRemoteDebugEnabledHelpText}"
                Content="{x:Static Member=local:PropertyPageResources.RemoteDebug}"/>
            <local:WatermarkTextBox
                Grid.Row="6"
                Grid.Column="1"
                x:Name="txtRemoteDebugMachine"
                Watermark="{x:Static Member=local:PropertyPageResources.RemoteDebugMachineWatermark}"
                Margin="5,5,2,4"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                Text="{Binding Path=RemoteDebugMachine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding Path=SupportsRemoteDebug, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                MinWidth="200"
                MinHeight="23"
                AutomationProperties.Name="{x:Static Member=local:PropertyPageResources.RemoteDebugMachineWatermark}">
                <local:WatermarkTextBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                        <Binding Path="RemoteDebugEnabled" Mode="OneWay"/>
                        <Binding Path="IsProfileSelected" Mode="OneWay"/>
                    </MultiBinding>
                </local:WatermarkTextBox.IsEnabled>
            </local:WatermarkTextBox>
            <Button
                Grid.Row="6"
                Grid.Column="2"
                x:Uid="btnFindRemoteMachine"
                x:Name="btnFindRemoteMachine"
                MinHeight="23"
                MinWidth="80"
                Margin="5.8,4,0,5"
                HorizontalAlignment="Left"
                VerticalContentAlignment="Center"
                VerticalAlignment="Center"
                Content="{x:Static local:PropertyPageResources.FindBtn}"
                Visibility="{Binding Path=SupportsRemoteDebug, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                Command="{Binding FindRemoteMachineCommand}">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                        <Binding Path="RemoteDebugEnabled" Mode="OneWay"/>
                        <Binding Path="IsProfileSelected" Mode="OneWay"/>
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
            <Label
                Grid.Row="7"
                Content="{x:Static Member=local:PropertyPageResources.AuthenticationMode}" 
                Margin="4,4,3,5"
                VerticalAlignment="Center"
                Visibility="{Binding Path=SupportsRemoteDebug, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
            />
            <ComboBox
                Grid.Row="7"
                Grid.Column="1"
                MinWidth="200"
                MinHeight="23"
                Margin="5,7,2,6"
                VerticalAlignment="Center"
                DisplayMemberPath="Name"
                VerticalContentAlignment="Center"
                Visibility="{Binding Path=SupportsRemoteDebug, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                ItemsSource="{Binding Path=RemoteAuthenticationProviders, Mode=OneWay}"
                SelectedValue="{Binding Path=RemoteAuthenticationProvider}"
                AutomationProperties.Name="{x:Static Member=local:PropertyPageResources.AuthenticationMode}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="AutomationProperties.Name" Value="{Binding Path=Name}"/>
                    </Style>
                </ComboBox.ItemContainerStyle>
                <ComboBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                        <Binding Path="RemoteDebugEnabled" Mode="OneWay"/>
                        <Binding Path="IsProfileSelected" Mode="OneWay"/>
                        <Binding Path="HasAuthenticationProviders" Mode="OneWay" />
                    </MultiBinding>
                </ComboBox.IsEnabled>
            </ComboBox>

            <!-- Environment variables -->
            <Label 
                Grid.Row="8"
                x:Uid="envVarsLabel"
                Margin="4,4,3,0"
                IsTabStop="False"
                VerticalAlignment="Top"
                Visibility="{Binding Path=SupportsEnvironmentVariables, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                Content="{x:Static Member=local:PropertyPageResources.EnvironmentVariables}"/>
            <DataGrid
                x:Name="dataGridEnvironmentVariables"
                Grid.Row="8"
                Grid.Column="1"
                Background="White"
                Margin="5,4,2,4"
                BorderThickness="1"
                MinHeight="150"
                MaxHeight="150"
                IsEnabled="{Binding Path=IsProfileSelected, Mode=OneWay}"
                Visibility="{Binding Path=SupportsEnvironmentVariables, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                ItemsSource="{Binding EnvironmentVariables, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                VerticalGridLinesBrush="{DynamicResource {x:Static shell:VsBrushes.GridLineKey}}"
                HorizontalGridLinesBrush="{DynamicResource {x:Static shell:VsBrushes.GridLineKey}}"
                SelectedIndex="{Binding EnvironmentVariablesRowSelectedIndex, Mode=TwoWay}"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                Focusable="False"
                GridLinesVisibility="All"
                CanUserReorderColumns="False"
                CanUserSortColumns="False"
                CanUserResizeColumns="True"
                CanUserResizeRows="False"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                VirtualizingPanel.IsVirtualizing="False"
                SelectionMode="Single"
                AutomationProperties.Name="{x:Static Member=local:PropertyPageResources.EnvironmentVariables}">
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Margin" Value="0,0,-1,0" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="AutomationProperties.Name" Value="{Binding RelativeSource={RelativeSource Self}, Path=Column.Header}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <local:EnvironmentDataGridTemplateColumn x:Uid="HeaderName" Header="{x:Static Member=local:PropertyPageResources.NameHeader}" MinWidth="80">
                        <local:EnvironmentDataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Padding="4,0,4,0">
                                    <TextBlock 
                                        Padding="0,6,0,0"
                                        Height="23" FontSize="11"
                                        Text="{Binding Path=Name}"/>
                                </Border>
                            </DataTemplate>
                        </local:EnvironmentDataGridTemplateColumn.CellTemplate>
                        <local:EnvironmentDataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <local:WatermarkTextBox 
                                    Height="23" FontSize="11"
                                    VerticalContentAlignment="Center"
                                    util:FocusAttacher.Focus="True"
                                    Watermark="{x:Static Member=local:PropertyPageResources.EnvVariableNameWatermark}"
                                    Text="{Binding Path=Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </local:EnvironmentDataGridTemplateColumn.CellEditingTemplate>
                    </local:EnvironmentDataGridTemplateColumn>
                    <local:EnvironmentDataGridTemplateColumn x:Uid="HeaderValue" Header="{x:Static Member=local:PropertyPageResources.ValueHeader}" MinWidth="255">
                        <local:EnvironmentDataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Padding="4,0,4,0">
                                    <TextBlock
                                        Padding="0,6,0,0"
                                        Height="23" FontSize="11"
                                        Text="{Binding Path=Value}"/>
                                </Border>
                            </DataTemplate>
                        </local:EnvironmentDataGridTemplateColumn.CellTemplate>
                        <local:EnvironmentDataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <local:WatermarkTextBox 
                                    Height="23" FontSize="11"
                                    VerticalContentAlignment="Center"
                                    util:FocusAttacher.Focus="True"
                                    Watermark="{x:Static Member=local:PropertyPageResources.EnvVariableValueWatermark}"
                                    Text="{Binding Path=Value, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </local:EnvironmentDataGridTemplateColumn.CellEditingTemplate>
                    </local:EnvironmentDataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Margin="6,20,0,0" Grid.Row="8" Grid.Column="2" 
                        Visibility="{Binding Path=SupportsEnvironmentVariables, Mode=OneWay, Converter={StaticResource visibilityConverter}}">
                <Button 
                    x:Uid="AddEnvironmentVariableButton" 
                    Name="AddEnvironmentVariableButton" 
                    Margin="0,8,0,10" 
                    MinWidth="80"
                    MinHeight="23"
                    Command="{Binding Path=AddEnvironmentVariableRowCommand}"
                    Content="{x:Static Member=local:PropertyPageResources.AddBtn}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                            <Binding Path="EnvironmentVariablesValid" Mode="OneWay"/>
                            <Binding Path="IsProfileSelected" Mode="OneWay"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <Button 
                    x:Uid="RemoveEnvironmentVariableButton" 
                    MinWidth="80"
                    MinHeight="23"
                    Command="{Binding Path=RemoveEnvironmentVariableRowCommand}"
                    Content="{x:Static Member=local:PropertyPageResources.RemoveBtn}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                            <Binding Path="RemoveEnvironmentVariablesRow" Mode="OneWay"/>
                            <Binding Path="IsProfileSelected" Mode="OneWay"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
            </StackPanel>

            <!-- Native code debugging -->
            <CheckBox 
                Grid.Row="9"
                Grid.Column="0"
                x:Uid="chkNativeCodeDebugging"
                x:Name="chkNativeCodeDebugging"
                Visibility="{Binding SupportNativeDebugging, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                IsChecked="{Binding NativeCodeDebugging, Mode=TwoWay}"
                Margin="9,7,3,7"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                Content="{x:Static Member=local:PropertyPageResources.chkNativeCodeDebuggingText}">
                <!-- Disable CheckBox if WebView2 debugging is selected, since we can only launch JS debugger alone -->
                <CheckBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                        <Binding Path="IsProfileSelected" Mode="OneWay"/>
                        <Binding Path="JSWebView2Debugging" Mode="OneWay" Converter="{StaticResource InverseBooleanConverter}"/>
                    </MultiBinding>
                </CheckBox.IsEnabled>
            </CheckBox>

            <!-- SQL debugging -->
            <CheckBox
                Grid.Row="10"
                Grid.Column="0"
                x:Uid="chkSqlCodeDebugging"
                x:Name="chkSqlCodeDebugging"
                Visibility="{Binding SupportSqlDebugging, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                IsChecked="{Binding SqlDebugging, Mode=TwoWay}"
                Margin="9,7,3,7"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"     
                Content="{x:Static Member=local:PropertyPageResources.chkSqlCodeDebuggingText}">
                <!-- Disable CheckBox if WebView2 debugging is selected, since we can only launch JS debugger alone -->
                <CheckBox.IsEnabled>
                    <MultiBinding Converter="{StaticResource MultiValueBoolToBoolAnd}">
                        <Binding Path="IsProfileSelected" Mode="OneWay"/>
                        <Binding Path="JSWebView2Debugging" Mode="OneWay" Converter="{StaticResource InverseBooleanConverter}"/>
                    </MultiBinding>
                </CheckBox.IsEnabled>
            </CheckBox>

            <!-- JavaScript WebView2 Debugging -->
            <CheckBox
                Grid.Row="11"
                Grid.ColumnSpan="2"
                x:Uid="chkJSWebView2Debugging"
                x:Name="chkJSWebView2Debugging"
                Visibility="{Binding SupportJSWebView2Debugging, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                IsChecked="{Binding JSWebView2Debugging, Mode=TwoWay}"
                Margin="9,7,3,7"
                VerticalAlignment="Center"
                IsEnabled="{Binding Path=IsProfileSelected, Mode=OneWay}"
                VerticalContentAlignment="Center"
                Content="{x:Static Member=local:PropertyPageResources.chkJSWebView2DebuggingText}"/>

            <TextBlock
                Grid.Row="12"
                Grid.ColumnSpan="2"
                x:Uid="JSWebView2DebuggingAdditionalText"
                x:Name="JSWebView2DebuggingAdditionalText"
                Visibility="{Binding JSWebView2Debugging, Mode=OneWay, Converter={StaticResource visibilityConverter}}"
                Margin="9,7,3,7"
                VerticalAlignment="Center"
                IsEnabled="{Binding Path=IsProfileSelected, Mode=OneWay}"
                Text="{x:Static Member=local:PropertyPageResources.JSWebView2DebuggingAdditionalText}"/>

            <!-- Where the custom control is placed for the active provider -->
            <ContentPresenter Grid.Row="13" Grid.Column="0"  Grid.ColumnSpan="3" Content="{Binding ActiveProviderUserControl, Mode=OneWay}" />
        </Grid>
    </Grid>
</local:PropertyPageControl>
